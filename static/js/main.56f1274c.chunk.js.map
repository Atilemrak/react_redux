{"version":3,"sources":["redux/type.js","redux/actions.js","SingleComment.js","Comments.js","likes.js","spin.js","title.js","App.js","redux/commentsReduser.js","redux/inputReducer .js","redux/likesReducer.js","redux/loaderReducer.js","redux/rootReducer.js","redux/midleware.js","index.js"],"names":["increment","decrement","inputText","commentsCreate","commentsUpdate","commentsDelete","commentsLoad","loaderDisplayOn","loaderDisplayOff","errorDisplayOn","errorDisplayOff","errorOn","text","dispatch","type","setTimeout","loaderOff","SingleComment","data","useState","commentText","setCommentText","id","useDispatch","useEffect","onSubmit","e","preventDefault","comments_Update","className","onClick","comments_Delete","value","onChange","target","hidden","Comments","props","textComments","setTextComments","comments","useSelector","state","commentsReducer","a","fetch","response","json","jsonData","uniqid","comments_Create","length","map","res","connect","likes","likesReducer","onIncrementLikes","onDecrementLikes","Spin","spinner","loaderReducer","loading","color","height","width","visible","Title","inputReducer","input_Text","App","error","console","log","src","alt","initialState","rootReducer","combineReducers","action","commentsNew","name","itemindex","findIndex","nextComment","slice","badWords","store","createStore","compose","applyMiddleware","thunk","next","some","includes","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56f1274c.chunk.js","sourcesContent":["export const increment = 'increment';\r\nexport const decrement = 'decrement';\r\nexport const inputText = 'inputText';\r\nexport const commentsCreate = 'commentsCreate';\r\nexport const commentsUpdate = 'commentsUpdate';\r\nexport const commentsDelete = 'commentsDelete';\r\nexport const commentsLoad = 'commentsLoad';\r\nexport const loaderDisplayOn = 'loaderDisplayOn';\r\nexport const loaderDisplayOff = 'loaderDisplayOff';\r\nexport const errorDisplayOn = 'errorDisplayOn';\r\nexport const errorDisplayOff = 'errorDisplayOff';\r\n\r\n","import { decrement, increment, inputText, commentsCreate, commentsUpdate, commentsDelete, commentsLoad, loaderDisplayOn, loaderDisplayOff, errorDisplayOn, errorDisplayOff } from \"./type\";\r\n\r\nexport function incrementLikes() {\r\n    return {\r\n        type: increment\r\n    }\r\n}\r\n\r\n\r\nexport function decrementLikes() {\r\n    return {\r\n        type: decrement\r\n    }\r\n}\r\n\r\nexport function input_Text(text) {\r\n    return {\r\n        type: inputText,\r\n        text\r\n    }\r\n}\r\n\r\nexport function comments_Create(text, id) {\r\n    return {\r\n        type: commentsCreate,\r\n        data: { text, id }\r\n    }\r\n}\r\n\r\nexport function comments_Update(text, id) {\r\n    return {\r\n        type: commentsUpdate,\r\n        data: { text, id }\r\n    }\r\n}\r\nexport function comments_Delete(id) {\r\n    return {\r\n        type: commentsDelete,\r\n        id\r\n    }\r\n}\r\n\r\nexport function errorOn(text) {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: errorDisplayOn,\r\n            text\r\n        });\r\n        setTimeout(() => {\r\n            dispatch(errorOff());\r\n        }, 2000)\r\n    }\r\n}\r\n\r\nexport function errorOff() {\r\n    return {\r\n        type: errorDisplayOff\r\n    }\r\n   \r\n}\r\n\r\nexport function comments_load() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(loaderOn());\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/comments?_limit=10');\r\n            const jsonData = await response.json();\r\n\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: commentsLoad,\r\n                    data: jsonData\r\n                });\r\n                dispatch(loaderOff());\r\n            }, 1000)\r\n        }\r\n        catch (err) {\r\n            dispatch(errorOn('ошибка:', err));\r\n            // console.log(err);\r\n            dispatch(loaderOff());\r\n        }\r\n    }\r\n}\r\n\r\nexport function loaderOn() {\r\n    return {\r\n        type: loaderDisplayOn,\r\n    }\r\n}\r\n\r\n\r\nexport function loaderOff() {\r\n    return {\r\n        type: loaderDisplayOff,\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { comments_Update, comments_Delete } from \"./redux/actions\";\r\n\r\nfunction SingleComment({data}) {\r\n    const [commentText, setCommentText] = useState('');\r\n    const {text, id} = data\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      if(text) {\r\n          setCommentText(text);\r\n      }\r\n\r\n    }, [text]);\r\n\r\n    const handleInput = (e) => {\r\n        setCommentText(e.target.value);\r\n    };\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        dispatch(comments_Update(commentText, id));\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch(comments_Delete(id));\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n            <form onSubmit={handleUpdate} className=\"comments-item\">\r\n                <div onClick={handleDelete} className=\"comments-item-delete\">&times;</div>\r\n                <input type=\"text\" value={commentText} onChange={handleInput}/>\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default SingleComment;","import { useState, useEffect } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport uniqid from 'uniqid';\r\nimport { comments_Create, comments_load } from \"./redux/actions\";\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nfunction Comments(props) {\r\n\r\n    const [textComments, setTextComments] = useState('');\r\n    const dispatch = useDispatch();\r\n    const {comments} = useSelector(state => state.commentsReducer);\r\n    // console.log ('comments =>>>', comments);\r\n\r\n    const handleInput = (e) => {\r\n        // console.log(e.target.value); \r\n        setTextComments(e.target.value);\r\n    }\r\n\r\n    const hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n        const id = uniqid();\r\n        dispatch(comments_Create(textComments, id));\r\n        setTextComments('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(comments_load())\r\n    }, []);\r\n\r\n    return ( \r\n        <div className=\"card-comments\">\r\n            <form onSubmit={hanldeSubmit} className=\"comments-item-create\">\r\n                <input className=\"input-create\" type=\"text\" value={textComments} onChange={handleInput}/>\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n            {comments.length > 0 && comments.map((res) => {\r\n                return <SingleComment key={res.id} data={res}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments;","import {connect} from 'react-redux';\r\nimport { decrementLikes, incrementLikes } from './redux/actions';\r\n\r\n\r\nfunction Likes(props) {\r\n    return (\r\n        <div className='button-controls'>\r\n            <button onClick={props.onIncrementLikes}> ♥ {props.likes}</button>\r\n            <button onClick={props.onDecrementLikes}>  👎</button>\r\n        </div> \r\n    );\r\n    \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    //  console.log (state);\r\n    //  console.log (state.like);\r\n    const {likes} = state.likesReducer;\r\n    return {\r\n        likes: likes\r\n    }\r\n}\r\n\r\nfunction mapDispathToProps(dispatch) {\r\n        return {\r\n            onIncrementLikes: () => {return dispatch(incrementLikes())},\r\n            onDecrementLikes: () => {return dispatch(decrementLikes())}\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Likes);","import { useSelector} from 'react-redux';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spin = (props) => {\r\n    const spinner = useSelector(state => state.loaderReducer.loading);\r\n    return (\r\n        <div className=\"loader-styles\">\r\n            <Loader \r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            visible={spinner}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spin;\r\n","import {useDispatch, useSelector} from 'react-redux';\r\nimport { input_Text } from './redux/actions';\r\n\r\nfunction Title(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const text = useSelector(state => {\r\n        const {text} = state.inputReducer;\r\n        return text;\r\n    });\r\n    const handleChange = (e) => {\r\n        dispatch(input_Text(e.target.value))\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-title\">\r\n            <div className=\"card-title-top\">\r\n                <input type=\"text\" onChange={handleChange}></input>\r\n            </div>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Title;","import { useSelector} from 'react-redux';\n\nimport './App.css';\n\nimport Comments from './Comments';\nimport Likes from './likes';\nimport Spin from './spin';\nimport Title from './title';\n\n\n\nfunction App() {\n  const error = useSelector(state => state.loaderReducer.error);\n  console.log(error);\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin/>\n        <div className=\"card\">\n          {error && <div className='error-message'>{error} </div>}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\"/>\n            <Title/>\n            <Likes />\n          </div>\n          <Comments/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { commentsCreate, commentsUpdate, commentsDelete, commentsLoad } from \"./type\";\r\n\r\nconst initialState = {\r\n    comments: []\r\n};\r\n\r\nexport const commentsReducer = (state = initialState, action) => {\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case commentsCreate:\r\n            return {\r\n                ...state,\r\n                comments: [...state.comments, action.data]\r\n            }\r\n\r\n            case commentsLoad:\r\n                const commentsNew = action.data.map((res) => {\r\n                    return {\r\n                        text: res.name,\r\n                        id: res.id\r\n                    }\r\n                })\r\n            return {\r\n                ...state,\r\n                comments: commentsNew\r\n            }\r\n\r\n\r\n        case commentsUpdate:\r\n            const { data } = action;\r\n            const { comments } = state;\r\n            const itemindex = comments.findIndex(res => res.id === data.id);\r\n            const nextComment = [\r\n                ...comments.slice(0, itemindex),\r\n                data,\r\n                ...comments.slice(itemindex + 1)\r\n            ];\r\n            return {\r\n                ...state,\r\n                comments: nextComment\r\n            }\r\n\r\n\r\n        case commentsDelete:\r\n            return (() => {\r\n                const { id } = action;\r\n                const { comments } = state;\r\n                const itemindex = comments.findIndex(res => res.id === id);\r\n                const nextComment = [\r\n                    ...comments.slice(0, itemindex),\r\n                    ...comments.slice(itemindex + 1)\r\n                ];\r\n                return {\r\n                    ...state,\r\n                    comments: nextComment\r\n                }\r\n            })();\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n\r\n}","import { inputText } from \"./type\";\r\n\r\nconst initialState = {\r\n    text: ''\r\n};\r\n\r\nexport const inputReducer = (state = initialState, action) =>  {\r\n \r\n    switch(action.type) {\r\n        case inputText : \r\n        return {\r\n            ...state, \r\n           text: action.text\r\n        } \r\n        \r\n        default: {\r\n            return state;  \r\n        }\r\n    }\r\n   \r\n}\r\n\r\n","import { decrement, increment } from \"./type\";\r\n\r\nconst initialState = {\r\n    likes: 0\r\n};\r\n\r\nexport const likesReducer = (state = initialState, action) =>  {\r\n    // const {likes} = state;\r\n    switch(action.type) {\r\n        case increment : \r\n        return {\r\n            ...state, \r\n            likes: state.likes + 1\r\n        } \r\n        case decrement : \r\n        return {\r\n            ...state, \r\n            likes: state.likes - 1\r\n        }\r\n        \r\n        default: {\r\n            return state;  \r\n        }\r\n    }\r\n   \r\n}\r\n\r\n","import { loaderDisplayOff, loaderDisplayOn, errorDisplayOn, errorDisplayOff } from \"./type\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport const loaderReducer = (state = initialState, action) =>  {\r\n \r\n    switch(action.type) {\r\n        case loaderDisplayOn : \r\n        return {\r\n            ...state, \r\n           loading: true\r\n        } \r\n\r\n        case loaderDisplayOff : \r\n        return {\r\n            ...state, \r\n           loading: false\r\n        } \r\n\r\n        case errorDisplayOn : \r\n        return {\r\n            ...state, \r\n           error: action.text\r\n        } \r\n        case errorDisplayOff : \r\n        return {\r\n            ...state, \r\n           error: null\r\n        } \r\n        \r\n        default: {\r\n            return state;  \r\n        }\r\n    }\r\n   \r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { commentsReducer } from \"./commentsReduser\";\r\nimport { inputReducer } from \"./inputReducer \";\r\nimport { likesReducer } from \"./likesReducer\";\r\nimport { loaderReducer } from \"./loaderReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    likesReducer,\r\n    inputReducer,\r\n    commentsReducer,\r\n    loaderReducer\r\n    \r\n});\r\n\r\n","import { errorOn } from \"./actions\"\r\nimport { commentsCreate } from \"./type\"\r\n\r\nconst badWords = ['козел', 'урод']\r\n\r\nexport function spamFilter(store) {\r\n    console.log(store);\r\n    return function (next) {\r\n        return function (action) {\r\n            if (action.type === commentsCreate) {\r\n                console.log('ss')\r\n                const hasBadWords = badWords.some(res => action.data.text.includes(res));\r\n                if (hasBadWords) {\r\n                    return store.dispatch(errorOn('не надо так'))\r\n                }\r\n            }\r\n            return next(action);\r\n        }\r\n    }\r\n}\r\n\r\n// export function spamFilter(store) {\r\n//     return function (next) {\r\n//         return function (action) {\r\n//             if (action.type === commentsCreate) {\r\n//                 console.log('ss')\r\n//                 const hasBadWords = badWords.some(res => action.data.text.includes(res));\r\n//                 if  (hasBadWords) {\r\n//                     return store.dispatch(errorOn('не надо так'))\r\n//                 }\r\n//             }\r\n//             return next(action);\r\n//         }\r\n//     }\r\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { createStore, compose, applyMiddleware } from 'redux';\n\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\n\n\nimport './index.css';\nimport { spamFilter } from './redux/midleware';\n\n\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  ), \n  window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f \n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}